/******************************************************************************
* Author: dmike16
* Email : <cipmiky@gmail.com>
* Date  : 12 Nov 2017
*
* <<<<<<<<<<<<<<<<<<<<<<<<<<<<
* Build configuration for a
* custom gradle plugin
* implementation.
* project_tree :
*       src$
*          main$
*              groovy$
*              resources$
*          test$
*              groovy$
*******************************************************************************/
plugins{
  id 'java-gradle-plugin'
  id 'maven-publish'
  id 'groovy'
}
apply from: "$rootDir/gradle/integration-test.gradle"
apply from: "$rootDir/gradle/functional-test.gradle"

group = pack
version = state
/******************************************************************************
* Plugin standalone project dependecies
******************************************************************************/
configurations.all{
  resolutionStrategy{
    //Override default behavior so that the build fail on version conflit
    failOnVersionConflict()
  }
}

repositories{
  jcenter()
}

dependencies {
    implementation ('org.jboss.as:jboss-as-controller-client:7.2.0.Final'){
      exclude group: 'org.jboss.logging', module: 'jboss-logging'
    }
    implementation group: 'org.jboss.logging', name: 'jboss-logging', version: '3.3.2.Final'
    testCompile ('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
}
/*******************************************************************************
 * jar name with no version
 */
jar{
  archiveName "${project.name}.jar"
}
/******************************************************************************
* Define plugin id and prop file in META-INFO/gradle-plugins
******************************************************************************/
gradlePlugin{
  plugins{
    wildflyBase{
      id = 'com.github.dmike16.cplug.wildfly-base'
      implementationClass = 'com.github.dmike16.cplug.WildflyBasePlugin'
    }
  }
  plugins{
    wildfly{
      id = 'com.github.dmike16.cplug.wildfly'
      implementationClass = 'com.github.dmike16.cplug.WildflyPlugin'
    }
  }
}
/******************************************************************************
* Maven publication
* <<<<<<<<<<<<<<<<<<<
* A publication must
* be added to the set
* of publications.
* Commands:
*  #remote: gradle publish
*  #local : gradle publishToMavenLocal
*******************************************************************************/
publishing{
  publications{
    pluginImpl(MavenPublication){
      from components.java
      pom.withXml {
        asNode().appendNode('description','Gradle plugin to deploy on wildfly/jboss server')
      }
    }
    /* Add repo to publish
    repositories{
      maven{
        url "$repo"
      }
    }*/
  }
}
/******************************************************************************
* Standard gradle wrapper task that download the gradlew script, so that everyone
* that clone the repo can build the project without having the gradle binary
* files.
*******************************************************************************/
task wrapper(type: Wrapper){
  gradleVersion = '4.5.1'
}
